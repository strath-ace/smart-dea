# This Source Code Form is subject to the terms of the Mozilla Public ---------------------
# License, v. 2.0. If a copy of the MPL was not distributed with this ---------------------
# file, You can obtain one at http://mozilla.org/MPL/2.0/. */ -----------------------------
# ---------------- Copyright (C) 2020 University of Strathclyde and Author ----------------
# -------------------------------- Author: Audrey Berquand --------------------------------
# ------------------------- e-mail: audrey.berquand@strath.ac.uk --------------------------

'''
Last modified: 29/03/2021
Author: Audrey Berquand, audrey.berquand@strath.ac.uk
Organisation: University of Strathclyde, ICE Lab
------------------------------------------------------------------------------------------------------------------------
Purpose: Generate a TypeDB (formely known as Grakn) schema layer in TypeQL (formely known as graql) from a UML model '''

from xmi_verter_constants import OBJECT_ID_PROPERTY, OBJECT_TYPE_PROPERTY, OBJECT_REVISION_PROPERTY, OBJECT_CONTAINER_PROPERTY
from xmi_helpers import cap


class DATA(object):

# -----------------------------------
#             DATA TYPES
# -----------------------------------
    versionTypeQL='2.0.1'

    TypeQLTypeDict = {
        # Basic Types
        'Boolean'              : 'boolean',
        'Integer'              : 'double',
        'LongInteger'          : 'long',
        'Real'                 : 'double',
        'String'               : 'string',
        'Date'                 : 'string',
        'DateTime'             : 'string',
        'FileContentType'      : 'string',
        'LanguageCode'         : 'string',
        'ParameterFormulaType' : 'string',
        'ParameterValueType'   : 'string',
        'Sha1HashType'         : 'string',
        'TimeOfDay'            : 'string',
        'Uri'                  : 'string',
        'Uuid'                 : 'string',
        # Enumeration types : since typeDB does not allow to define lists, these become several instances of the same attribute 
        'ClassKind'                         :   'string',
        'LogLevelKind'                      :   'string',
        'ParticipantAccessRightKind'        :   'string',
        'PersonAccessRightKind'             :   'string',
        'ActualFiniteStateKind'             :   'string',
        'BooleanOperatorKind'               :   'string',
        'InterfaceEndKind'                  :   'string',
        'ParameterSwitchKind'               :   'string',
        'RelationalOperatorKind'            :   'string',
        'RulesVerificationStatusKind'       :   'string',
        'EngineeringModelKind'              :   'string',
        'LogarithmBaseKind'                 :   'string',
        'NumberSetKind'                     :   'string',
        'StudyPhaseKind'                    :   'string',
        'VcardEmailAddressKind'             :   'string',
        'VcardTelephoneNumberKind'          :   'string',
        'RuleVerificationStatusKind'        :   'string',
        }

   


    ModuleHeader1 = '''\
# --------------------------------------------------------------------------------------------------------------------
# TypeDB Schema Layer Definition for UML model {modelName} version {versionNumber}.
# Compatible with TypeDB version 2.0.1
# Coded by Audrey Berquand (University of Strathclyde)
# Code was auto-generated by xmi_verter at {timeStamp}
# --------------------------------------------------------------------------------------------------------------------
'''
    randomInfo = '''\n
Requested Insight:
"{Info}" '''

# -----------------------------------
#        ENTITY DEFINITIONS
# -----------------------------------

    defineEntityName = '''\n
{name} '''

    defineInheritance = ''' sub {nameSuperType},'''

    defineSubEntity = ''' sub entity,'''

    defineSubProperty = ''' sub Property,'''

    abstract = ''' abstract,'''
    
    addAttribute = '''
    owns {attributeName},'''

   
    addRoleContains = '''
    plays Containment_{roleName}:contains,'''

    addRoleRefers = '''
    plays Reference_{roleName}:refersTo,'''

    addRoleIsContained = '''
    plays Containment_{roleName}:isContained,'''

    addRoleIsReferred = '''
    plays Reference_{roleName}:isReferredBy,'''

    #addRoleContains = '''
    #plays Containment_{parameterName}:contains_{roleName},'''

    #addRoleRefers = '''
    #plays Reference_{parameterName}:refersTo_{roleName},'''

    #addRoleIsContained = '''
    #plays Containment_{parameterName}:isContained_{roleName},'''

    #addRoleIsReferred = '''
    #plays Reference_{parameterName}:isReferredBy_{roleName},'''


    entityEnd = '''; '''

# -----------------------------------
#        ATTRIBUTES DEFINITIONS
# -----------------------------------
    
    defineAttribute = '''
 {name} sub attribute, value {datatype} ; 
'''

# -----------------------------------------------------------------
#       RELATIONSHIP DEFINITIONS BETWEEN CLASS AND PARAMETERS
# -----------------------------------------------------------------
# createContainmentRelationship = '''
#Containment_{parameterName} sub relation,
#    relates contains_{parameterName},
#    relates isContained_{parameterName};
#'''
#    createReferenceRelationship = '''
#Reference_{parameterName} sub relation, 
#    relates refersTo_{parameterName},
#    relates isReferredBy_{parameterName};
#'''

    createContainmentRelationship = '''
Containment_{parameterName} sub relation,
    relates contains,
    relates isContained;
'''
    createReferenceRelationship = '''
Reference_{parameterName} sub relation, 
    relates refersTo,
    relates isReferredBy;
'''



